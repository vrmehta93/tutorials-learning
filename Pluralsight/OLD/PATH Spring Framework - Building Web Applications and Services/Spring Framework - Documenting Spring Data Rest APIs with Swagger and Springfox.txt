Craig Golightly
Mar 8, 2020

2.1 - Version Checks (Understanding Swagger)
	Swagger 3.0.0-snapshot (springfox
	Spring-boot-starter-parent 2.2.4
	Java 1.8

2.2 - Why Document APIs?

2.3 - How Swagger and Springfox Can Help
	Swagger started out as a simple open source specification for designing RESTful APIs in 2010
	In 2015, the Swagger project was acquired by SmartBear Software. The Swagger specification was donated to the Linux Foundation and renamed the OpenAPI
	The OpenAPI specification is a standard for RESTful APIs
	Swagger UI is the software that can read the JSON document generated from your project and display the information about your API in a human-readable form
	The Swagger API is also a REST client you can use to interact with your API
	There are several other swagger tools available to help  with design, documentation, test and deployment of your API
	You can learn more at https://swagger.io/
	Springfox is a library that makes it easy to generate Swagger from a Spring project
	It utilizes existing spring annotations to generate the Swagger document and also supports Swagger annotations you may use in your code
	Overall, you want to maintain a balance of not adding documentation information just to add it
	Sometimes less documentation is more clear to the end user. If there's nothing more to say than the class name and the attribute name, then don't bother. Leave it alone. Your code and documentation will be more clear and easier to maintain
	Springfox tries to maintain defaults that makes sense for a spring project so you're not forced to add annotations all over the place

3.1 - Adding Swagger and Springfox to Your Project (Using Swagger in Your Project)
	In pom.xml,
		groupId - io.springfox
		artifactId - springfox-swagger2
		version - 3.0.0-SNAPSHOT
		
		groupId - io.springfox
		artifactId - spring-data-rest
		version - 3.0.0-SNAPSHOT
		
		groupId - io.springfox
		artifactId - springfox-swagger-ui
		version - 3.0.0-SNAPSHOT
	These libraries will generated swagger doc, work with spring data REST to pick up all of the autogenerated endpoints, and provide the Swagger UI where you can actually see the documentation and interact with your API
	Note, you'll also need to add a repository to pick the snapshot version of Springfox
		id - jcenter-snapshots
		name - jcenter
		url - https://jcenter.bintray.com/
	At the time of recording, the latest release has some bugs that don't work with spring data rest, so that's why we're using the snapshot version
	Next, we'll need to add a class with the @Configuration and @EnableSwagger2WebMvc annotations, as well as @Import(SpringDataRestConfiguration.class)
	The class itself can be called whatever you want, as well as the method, but it needs to have the @Bean annotation
	In the method, you'll create and return a Docket object
	The Docket is where you can make several modifications to what shows up in Swagger. For now, we'll just use the defaults
		@Configuration
		@EnableSwagger2WebMvc
		@Import(SpringDataRestConfiguration.class)
		public class ApplicationSwaggerConfig{
			@Bean
			public Docket employeeApi(){
				return new Docket(DocumentationType.SWAGGER_2)
					.select()
					.apis(RequestHandlerSelectors.any())
					.paths(PathSelectors.any())
					.build();
			}
		}

3.2 - Demo: Spring Data REST API with Swagger UI

3.3 - Demo: Customizing API Level Attributes
	ApiInfo Object - use this object to customize some api-level attributes (when we create a docket to add things like description, version and contact info)
	https://springfox.github.io/springfox/

4.1 - Annotating Entity Properties (Customizing Swagger for Your API)
	Spring is an opinionated framework. Springfox leverages spring opinions to generate Swagger for you without adding a lot of annotations
	@ApiModelProperty

4.2 - Supporting JSR-303 and Swagger Annotations
	If you'd like to automatically translate information from JSR-303 annotations like @NotNull, @Min, @Max and @Size into your Swagger models, you'll need to add an additional dependency in pom.xml
		groupId - io.springfox
		artifactId - springfox-bean-validators
		version - ${io.springfox.version}
	In Configuration class, add the following on your swagger configuration class
		@Import(BeanValidatorPluginsConfiguration.class)
	Note that if you're using the @ApiModelProperty annotation along with one of these 4 annotations, ApiModelProperty takes precedence
	To show a field is required, set parameter "required = true" in ApiModelProperty
	@ApiOperation

4.3 - Demo: Bean Validators and @ApiOperation

4.4 - Partitioning Documentation on API Versions
	If you're managing versioning by branching your code base and using a load balancer or proxy server to direct traffic, each application will simply have its own Swagger UI
	Since the documentation is generated from the code, any changes in each version will be reflected in the documentation for that version
	When you're working with a versioned API, you can utilize path selectors in the Docket object to restrict the generated documentation to certain endpoints based on the path of the endpoint
	This docket object contains a PathSelector that is filtering on an ant pattern of any endpoints that start with v2
		new Docket(DocumentationType.SWAGGER_2)
			.select()
			.apis(RequestHandlerSelectors.any())
			.paths(PathSelectors.ant("/v2/**"))
			.build()
			...
	By default, all paths are included but by adding PathSelectors, you can restrict what appears in your documentation

4.5 - Demo: Swagger Groups
	If you want to have multiple versions of your documentation available in a single swagger UI, you cna use Swagger groups to accomplish this
	Groups are configured in the Docket object. You'll simply call groupName and provide a name for the group
		new Docket(DocumentationType.SWAGGER_2)
			.groupName("employee-api-v2")
			.select()
			.apis(RequestHandlerSelectors.any())
			.paths(PathSelectors.ant("/v2/**"))
			.build()
			...
	From the Swagger UI, you can then select from groups you have defined to see the documentation for that group